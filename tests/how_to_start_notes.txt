From folder infrastructure press

terraform apply --auto-approve    To create instance in AWS cloud
terraform destroy --auto-approve  To create destroy in AWS cloud

Then we can se public_ip in terminal.
I click to my dns control panel https://dcc.godaddy.com/control/kolotech.space/dns
and create record A type with name for example 8march.kolotech.space. with my public_ip = "18.195.124.136"


Then I go to my created instance
Type
cd ToDo_Web_app/
sudo su
chmod +x init-letsencrypt.sh
./init-letsencrypt.sh

When I commented proxy pass - init-letsencrypt done successfully 
    # location / {
    #     root   /usr/share/nginx/html;
    #     index  index.html;
    # }
    location / {
        proxy_pass http://web;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }    












=== old ===


teste1d on ubuntu 22

Commands to start manually:
docker-compose up -d


http://127.0.0.1:8000/docs#/


*
pip freeze > requirements.txt
links: https://fastapi.tiangolo.com/tutorial/first-steps/

old:
uvicorn main:app --reload

to local test change to localhost
 fetch("http://api-todo.kolotech.space/tasks", { 
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },



sudo certbot certonly --webroot -w /path/to/your/app -d api-todo.kolotech.space -d api-todo.kolotech.space











give me docker-compose nginx certbot example with all depends config files. Add in that configs my email dobryjsok60@gmail.com and my website domain name api-todo.kolotech.space/


version: '3'

services:
  certbot:
    image: certbot/certbot
    container_name: certbot
    restart: unless-stopped
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - certbot-webroot:/var/www/html
    environment:
      - EMAIL=dobryjsok60@gmail.com
      - DOMAIN=api-todo.kolotech.space
    command: certonly --webroot --webroot-path=/var/www/html --email ${EMAIL} --agree-tos --no-eff-email --force-renewal -d ${DOMAIN}

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    depends_on:
      - certbot
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginx-conf:/etc/nginx/conf.d
      - nginx-data:/usr/share/nginx/html
      - certbot-etc:/etc/letsencrypt
      - certbot-webroot:/var/www/html
    command: /bin/bash -c "envsubst '\$${DOMAIN}' < /etc/nginx/conf.d/nginx.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

volumes:
  certbot-etc:
  certbot-var:
  certbot-webroot:
  nginx-conf:
  nginx-data:

entrypoint: ["sh", "-c", "trap exit TERM; while :; do certbot certonly --webroot --webroot-path=/var/www/certbot --email dobryjsok60@gmail.com -d api-todo.kolotech.space --agree-tos --non-interactive ; sleep 12h && wait $${!}; done;"]
